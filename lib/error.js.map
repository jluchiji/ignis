{"version":3,"sources":["error.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;qBA+EwB,UAAU;;;;;;;;;;;;;sBAxEV,QAAQ;;;;;;;;;;;IAQnB,UAAU;YAAV,UAAU;;AAEV,WAFA,UAAU,CAET,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE;0BAF3B,UAAU;;AAGnB,+BAHS,UAAU,6CAGb,OAAO,EAAE;;AAEf,QAAI,CAAC,IAAI,GAAM,YAAY,CAAC;AAC5B,QAAI,CAAC,MAAM,GAAI,MAAM,CAAC;AACtB,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;AAEvB,QAAI,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE;AAAE,UAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KAAE;GAC7D;;;;;;;;;;;;;;;;;;eAXU,UAAU;;WAyBT,eAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE;AACrC,YAAM,IAAI,UAAU,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;KAChD;;;;;;;;;;;;;;WAYU,cAAC,OAAO,EAAE,OAAO,EAAE;AAC5B,aAAO,GAAG,oBAAE,MAAM,CAAC,OAAO,IAAI,EAAG,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,YAAM,IAAI,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;KAC7C;;;;;;;;;;;;;;WAYc,kBAAC,OAAO,EAAE,OAAO,EAAE;AAChC,YAAM,IAAI,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;KAC7C;;;SAxDU,UAAU;GAAS,KAAK;;;;AAgEtB,SAAS,UAAU,CAAC,KAAK,EAAE;AACxC,OAAK,CAAC,SAAS,CAAC,IAAI,GAAO,UAAU,CAAC,IAAI,CAAC;AAC3C,OAAK,CAAC,SAAS,CAAC,KAAK,GAAM,UAAU,CAAC,KAAK,CAAC;AAC5C,OAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC/C,OAAK,CAAC,SAAS,CAAC,KAAK,GAAM,UAAU,CAAC;AACtC,OAAK,CAAC,KAAK,GAAG,UAAU,CAAC;CAC1B","file":"error.js","sourcesContent":["/**\n * error.js\n *\n * @author  Denis Luchkin-Zhou <denis@ricepo.com>\n * @license MIT\n */\n\nimport _           from 'lodash';\n\n/**\n * IgnisError\n *\n * @description    Error arising within Ignis.js that should be reported back\n *                 to the client via an HTTP response.\n */\nexport class IgnisError extends Error {\n\n  constructor(status, message, details) {\n    super(message);\n\n    this.name    = 'IgnisError';\n    this.status  = status;\n    this.message = message;\n    this.details = details;\n\n    if (details && details.sensitive) { this.sensitive = true; }\n  }\n\n\n  /**\n   * .panic(3)\n   *\n   * @static\n   * @access                   public\n   * @description              Throws an IgnisError.\n   * @param        {status}    Status code to report to the client.\n   * @param        {message}   Human-readable message to report.\n   * @param        {details}   Additional error details and options.\n   * @throws       {IgnisError}\n   */\n  static panic(status, message, details) {\n    throw new IgnisError(status, message, details);\n  }\n\n  /**\n   * .deny(2)\n   *\n   * @static\n   * @access                   public\n   * @description              Throws an IgnisError with status of 403.\n   * @param        {message}   Human-readable message to report.\n   * @param        {details}   Additional error details.\n   * @throws       {IgnisError}\n   */\n  static deny(message, details) {\n    details = _.assign(details || { }, { sensitive: true });\n    throw new IgnisError(403, message, details);\n  }\n\n  /**\n   * .notFound(2)\n   *\n   * @static\n   * @access                   public\n   * @description              Throws an IgnisError with status of 404.\n   * @param        {message}   Human-readable message to report.\n   * @param        {details}   Additional error details.\n   * @throws       {IgnisError}\n   */\n  static notFound(message, details) {\n    throw new IgnisError(404, message, details);\n  }\n\n}\n\n\n/*!\n * Extension\n */\nexport default function ignisError(Ignis) {\n  Ignis.prototype.deny     = IgnisError.deny;\n  Ignis.prototype.panic    = IgnisError.panic;\n  Ignis.prototype.notFound = IgnisError.notFound;\n  Ignis.prototype.Error    = IgnisError;\n  Ignis.Error = IgnisError;\n}\n"],"sourceRoot":"/source/"}