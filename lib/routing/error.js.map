{"version":3,"sources":["routing/error.js"],"names":[],"mappings":";;;;;;;;;;;;;;;yBAOwB,YAAY;;;;;;;;;;AAS7B,SAAS,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE;AACpC,MAAI,CAAC,IAAI,CAAC,UAAS,MAAM,EAAE;AACzB,UAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;GACrC,CAAC,CAAC;AACH,SAAO,IAAI,CAAC;CACb;;;;;;;;;;;AAWM,SAAS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE;AACtC,SAAO,UAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACnC,QAAI,wBAAQ,GAAG,EAAE,IAAI,CAAC,EAAE;AAAE,cAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAAE,MACrD;AAAE,UAAI,CAAC,GAAG,CAAC,CAAC;KAAE;GACpB,CAAC;CACH","file":"routing/error.js","sourcesContent":["/**\n * routing/error.js\n *\n * @author  Denis Luchkin-Zhou <denis@ricepo.com>\n * @license MIT\n */\n\nimport { errorIs } from 'ignis-util';\n\n/**\n * error(2)\n *\n * @description                Adds an error handler to the error handler stack.\n * @param          {type}      Type of the error to handle.\n * @param          {callback}  Callback function to handle the error.\n */\nexport function error(type, callback) {\n  this.wait(function(router) {\n    router.use(handler(type, callback));\n  });\n  return this;\n}\n\n\n/**\n * handler(2)\n *\n * @description                Creates an express error handler that only\n *                             handles error specified by {type}.\n * @param          {type}      Type of the error to handle.\n * @return         {Function}  Express.js error handler callback.\n */\nexport function handler(type, callback) {\n  return function(err, req, res, next) {\n    if (errorIs(err, type)) { callback(err, req, res, next); }\n    else { next(err); }\n  };\n}\n"],"sourceRoot":"/source/"}