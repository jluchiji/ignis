{"version":3,"sources":["routing/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;qBAmDwB,gBAAgB;;qBA5ChB,SAAS;;qBACT,SAAS;;yBACT,YAAY;;;;;AAM7B,IAAM,OAAO,GAAG,uBAAO,yBAAyB,CAAC,CAAC;;;;;;;;;;;;AAWlD,SAAS,QAAQ,CAAC,IAAI,EAAE,EAAE,EAAE;AACjC,MAAI,EAAE,CAAC,UAAU,IAAI,OAAO,EAAE,WAAQ,KAAK,UAAU,EAAE;AAAE,MAAE,GAAG,EAAE,WAAQ,CAAC;GAAE;;AAE3E,MAAI,CAAC,IAAI,CAAC,YAAW;AACnB,QAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAC1B,QAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACf,UAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KACvB;GACF,CAAC,CAAC;;AAEH,SAAO,IAAI,CAAC;CACb;;;;;;AAMM,SAAS,IAAI,GAAG;AACrB,MAAI,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;CAC3B;;;;;;AAMc,SAAS,gBAAgB,CAAC,KAAK,EAAE;AAC9C,OAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjB,OAAK,CAAC,SAAS,CAAC,KAAK,eAAW,CAAC;AACjC,OAAK,CAAC,SAAS,CAAC,KAAK,eAAW,CAAC;AACjC,OAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;CACrC","file":"routing/index.js","sourcesContent":["/**\n * routing/index.js\n *\n * @author  Denis Luchkin-Zhou <denis@ricepo.com>\n * @license MIT\n */\n\nimport { mount }   from './mount';\nimport { error }   from './error';\nimport { symbol }  from 'ignis-util';\n\n\n/*!\n * Export symbols used by the mount(2).\n */\nexport const mounted = symbol('Ignis::routing::mounted');\n\n\n/**\n * endpoint(2)\n *\n * @description                Mounts an endpoint extension to the path.\n * @param          {path}      Path of the endpoint, relative to app root.\n * @param          {fn}        Extension function that mounts middleware.\n * @return         {this}      Namespace for further chaining.\n */\nexport function endpoint(path, fn) {\n  if (fn.__esModule && typeof fn.default === 'function') { fn = fn.default; }\n\n  this.wait(function() {\n    if (!this[mounted].has(fn)) {\n      fn(path, this);\n      this[mounted].add(fn);\n    }\n  });\n\n  return this;\n}\n\n\n/*!\n * Initializer.\n */\nexport function init() {\n  this[mounted] = new Set();\n}\n\n\n/*!\n * Ignis extension.\n */\nexport default function routingExtension(Ignis) {\n  Ignis.init(init);\n  Ignis.prototype.mount    = mount;\n  Ignis.prototype.error    = error;\n  Ignis.prototype.endpoint = endpoint;\n}\n"],"sourceRoot":"/source/"}